import{a as f,b as u}from"./chunks/chunk-46WPTPZI.js";var m="webflow-variable-modes-cache";function p(s){let a=new Blob([`(${s.toString()})()`],{type:"application/javascript"}),t=URL.createObjectURL(a),o=new Worker(t);return URL.revokeObjectURL(t),o}function y(){self.addEventListener("message",async s=>{let a=s.data;if(a.type==="fetchStylesheet")try{let t=await fetch(a.url);if(!t.ok)throw new Error(`Failed to fetch stylesheet: ${t.status} ${t.statusText}`);let o=await t.text(),n=/\.([^\s{,:]+)\s*{([^}]*)}/g,e={},r;for(;(r=n.exec(o))!==null;){let i=r[1],c=r[2];if(!i||!c)continue;let l=/(--[^:]+):\s*([^;]+);/g,d,h={};for(;(d=l.exec(c))!==null;){let g=d[1].trim(),b=d[2].trim();h[g]=b}Object.keys(h).length>0&&(e[i]=h)}self.postMessage({type:"stylesheetProcessed",classRulesMap:e})}catch(t){self.postMessage({type:"stylesheetProcessed",classRulesMap:{},error:t instanceof Error?t.message:String(t)})}})}async function M(s){let a=new Map,t=document.styleSheets[0];if(!t||!t.href)return a;let o=new Map;for(let e of s){if(!e.classList.length){a.set(e,{});continue}let r=e.classList[0];o.has(r)||o.set(r,[]),o.get(r).push(e)}let n=p(y);try{let e=await new Promise((r,i)=>{n.onmessage=c=>{let l=c.data;l.type==="stylesheetProcessed"&&(l.error?i(new Error(l.error)):r(l.classRulesMap))},n.onerror=c=>{i(new Error(`Worker error: ${c.message}`))},n.postMessage({type:"fetchStylesheet",url:t.href})});for(let[r,i]of o.entries()){let c=e[r]||{};for(let l of i)a.set(l,{...c})}}catch(e){console.error("Error in worker processing:",e)}finally{n.terminate()}return a}var w=async()=>{let s=f(),a=s?.toISOString()||"";console.debug("Calculating fresh variable modes data");let t=u({selector:"[data-variable-mode]"});if(!t)return null;let o=await M(t),n={};for(let e of t){let r=e.dataset.variableMode;if(!r)continue;let i=o.get(e);i&&(n[r]=i)}if(s)try{let e={publishDate:a,data:n};localStorage.setItem(m,JSON.stringify(e))}catch(e){console.error("Error caching variable modes:",e)}return n};window.wfVarModes={data:null,isReady:!1,onReady(s){this.isReady&&this.data?setTimeout(()=>s(this.data),0):window.addEventListener("wfVarModesReady",()=>s(this.data))}};var R=async()=>{let s=await w();if(!s){console.error("No injected variable modes found with [data-variable-mode] or extraction failed.");return}window.wfVarModes.data=s,window.wfVarModes.isReady=!0,window.dispatchEvent(new CustomEvent("wfVarModesReady")),console.debug("WF Variable Modes ready:",s)};(async()=>(console.time("WF Variable Modes worker Initialization"),await R(),console.timeEnd("WF Variable Modes worker Initialization")))();
